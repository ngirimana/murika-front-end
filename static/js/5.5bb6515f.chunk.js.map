{"version":3,"sources":["containers/house/house.module.scss","hoc/WithErrorHandler/WithErrorHandler.js","containers/house/Addhouse.jsx"],"names":["module","exports","WithErrorHandler","WrappedComponent","axios","state","error","errorConfirmedHandler","setState","this","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","Auxiliary","Modal","show","modalClosed","message","props","Component","AddHouse","controls","propertyType","elementType","elementConfig","options","value","disabled","seclected","displayValue","validation","required","valid","rooms","type","placeholder","minLength","maxLength","touched","bedRooms","bathRooms","size","monthlyRent","minimumRentperiod","aboutProperty","controls1","priceStatus","leaseDatails","district","sector","cell","parking","gated","furnished","houseVideo","houseImages","showComponent","onButtonClick","hideModal","fileSelectorHandler","event","images","i","target","files","length","item","filter","image","name","match","houseAddHandler","preventDefault","houseData","FormData","formElementIdentifier","append","formInput","forEach","onAddHouse","inputChangedHandler","controlName","updatedControls","checkValidity","inputChangedHandler2","parkingCheckBoxHander","isChecked","checked","gatedCheckBoxHander","furnishedCheckBoxHander","formElementsArray","key","push","id","config","formElementsArray1","form","map","formElement","Input","invalid","shouldValidate","changed","form1","errorMessage","className","classes","House","PrimaryHeading","onSubmit","Form","HouseForm","FormSegment","LabelField","onChange","FilesInput","htmlFor","onClick","videoInput","click","hidden","ref","houseVideoHandler","imageInput","multiple","HouseButton","Button","btnType","loading","Spinner","connect","house","dispatch","actions"],"mappings":"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","file":"static/js/5.5bb6515f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"house_Row__2FSvR\",\"Col1of2\":\"house_Col1of2__3e7mk\",\"col-1-of-3\":\"house_col-1-of-3__3YBf5\",\"col-2-of-3\":\"house_col-2-of-3__1cvaJ\",\"col-1-of-4\":\"house_col-1-of-4__2ISrB\",\"col-2-of-4\":\"house_col-2-of-4__2VS7b\",\"col-3-of-4\":\"house_col-3-of-4__GEplx\",\"House\":\"house_House__2G8nE\",\"HouseForm\":\"house_HouseForm__2Uly7\",\"LabelField\":\"house_LabelField__2i3bu\",\"FilesInput\":\"house_FilesInput__1vu-m\",\"HouseButton\":\"house_HouseButton__2t8Qf\",\"PrimaryHeading\":\"house_PrimaryHeading__19joD\"};","import React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Auxiliary from \"../Auxiliary/Auxiliary\";\r\n\r\nconst WithErrorHandler = (WrappedComponent, axios) => {\r\n  return class extends Component {\r\n    state = {\r\n      error: null,\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use((req) => {\r\n        this.setState({ error: null });\r\n        return req;\r\n      });\r\n      this.resInterceptor = axios.interceptors.response.use(\r\n        (res) => res,\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n    }\r\n\r\n    UNSAFE_componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.resInterceptor);\r\n    }\r\n\r\n    errorConfirmedHandler = () => {\r\n      this.setState({ error: null });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <Auxiliary>\r\n          <Modal\r\n            show={this.state.error}\r\n            modalClosed={this.errorConfirmedHandler}\r\n          >\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Auxiliary>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default WithErrorHandler;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { checkValidity } from \"../../shared/utility\";\r\nimport WithErrorHandler from \"../../hoc/WithErrorHandler/WithErrorHandler\";\r\nimport Invoice from \"../../components/PayMent/Payment\";\r\nimport classes from \"./house.module.scss\";\r\n\r\nclass AddHouse extends Component {\r\n  state = {\r\n    controls: {\r\n      propertyType: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            {\r\n              value: \"\",\r\n              disabled: true,\r\n              seclected: true,\r\n              displayValue: \"Choose House Type\",\r\n            },\r\n            { value: \"apartment\", displayValue: \"Apartment\" },\r\n            { value: \"hall\", displayValue: \"Hall\" },\r\n            { value: \"officeSpace\", displayValue: \"Office Space\" },\r\n            { value: \"townHouse\", displayValue: \"Town House\" },\r\n            { value: \"shop\", displayValue: \"Shop\" },\r\n            { value: \"warehouse\", displayValue: \"Warehouse\" },\r\n            { value: \"monsion\", displayValue: \"Monsion\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n        },\r\n        valid: true,\r\n      },\r\n      rooms: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"Number\",\r\n          placeholder: \"Number of Rooms\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 1,\r\n          maxLength: 3,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      bedRooms: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"Number\",\r\n          placeholder: \"Number of bed rooms\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 1,\r\n          maxLength: 3,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      bathRooms: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"Number\",\r\n          placeholder: \"Number of bath rooms\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 1,\r\n          maxLength: 3,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      size: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Size in Length * Width\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: false,\r\n          minLength: 1,\r\n          maxLength: 3,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      monthlyRent: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"Number\",\r\n          placeholder: \"Monthly Rent Price in Rwandan Francs\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 2,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      minimumRentperiod: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"Number\",\r\n          placeholder: \"Minimum Rent Period\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 1,\r\n          maxLength: 1,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n\r\n      aboutProperty: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"About Property \",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 1,\r\n          maxLength: 255,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    controls1: {\r\n      priceStatus: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            {\r\n              value: \"\",\r\n              disabled: true,\r\n              seclected: true,\r\n              displayValue: \"Choose Price Status\",\r\n            },\r\n            { value: \"negotiable\", displayValue: \"Negotiable\" },\r\n            { value: \"fixed\", displayValue: \"Fixed\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n        validation: {},\r\n        valid: true,\r\n      },\r\n      leaseDatails: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          type: \"textarea\",\r\n          placeholder: \"Lease Datails \",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 1,\r\n          maxLength: 255,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      district: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"House District\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 3,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      sector: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"House Sector\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 3,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      cell: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"House Cell\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 3,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    parking: false,\r\n    gated: false,\r\n    furnished: false,\r\n    houseVideo: \"\",\r\n    houseImages: [],\r\n    showComponent: false,\r\n    error: \"\",\r\n  };\r\n  onButtonClick = () => {\r\n    this.setState({\r\n      showComponent: true,\r\n    });\r\n  };\r\n  hideModal = () => {\r\n    this.setState({\r\n      showComponent: false,\r\n    });\r\n  };\r\n  fileSelectorHandler = (event) => {\r\n    let images = [];\r\n    for (let i = 0; i < event.target.files.length; i++) {\r\n      images[i] = event.target.files.item(i);\r\n    }\r\n    images = images.filter((image) =>\r\n      image.name.match(/\\.(jpg|jpeg|png|gif)$/)\r\n    );\r\n    this.setState({\r\n      houseImages: images,\r\n    });\r\n  };\r\n\r\n  houseAddHandler = (event) => {\r\n    event.preventDefault();\r\n    const houseData = new FormData();\r\n    for (let formElementIdentifier in this.state.controls) {\r\n      houseData.append(\r\n        `${formElementIdentifier}`,\r\n        this.state.controls[formElementIdentifier].value\r\n      );\r\n    }\r\n    for (let formInput in this.state.controls1) {\r\n      houseData.append(`${formInput}`, this.state.controls1[formInput].value);\r\n    }\r\n    houseData.append(\"parking\", this.state.parking);\r\n    houseData.append(\"furnished\", this.state.furnished);\r\n    houseData.append(\"gated\", this.state.gated);\r\n    houseData.append(\"houseVideo\", this.state.houseVideo);\r\n    this.state.houseImages.forEach((houseImages) => {\r\n      houseData.append(\"houseImages\", houseImages);\r\n    });\r\n    this.props.onAddHouse(houseData);\r\n  };\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.controls[controlName].validation\r\n        ),\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n\r\n  inputChangedHandler2 = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls1,\r\n      [controlName]: {\r\n        ...this.state.controls1[controlName],\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          this.state.controls1[controlName].validation\r\n        ),\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls1: updatedControls });\r\n  };\r\n  parkingCheckBoxHander = (event) => {\r\n    const isChecked = event.target.checked;\r\n    this.setState({ parking: isChecked });\r\n  };\r\n  gatedCheckBoxHander = (event) => {\r\n    const isChecked = event.target.checked;\r\n    this.setState({ gated: isChecked });\r\n  };\r\n  furnishedCheckBoxHander = (event) => {\r\n    const isChecked = event.target.checked;\r\n    this.setState({ furnished: isChecked });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    const formElementsArray1 = [];\r\n    for (let key in this.state.controls1) {\r\n      formElementsArray1.push({\r\n        id: key,\r\n        config: this.state.controls1[key],\r\n      });\r\n    }\r\n    let form = formElementsArray.map((formElement) => (\r\n      <Input\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        required={formElement.config.validation.required}\r\n        invalid={!formElement.config.valid}\r\n        files={formElement.config.files}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n        changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n      />\r\n    ));\r\n    let form1 = formElementsArray1.map((formElement) => (\r\n      <Input\r\n        key={formElement.id}\r\n        elementType={formElement.config.elementType}\r\n        elementConfig={formElement.config.elementConfig}\r\n        value={formElement.config.value}\r\n        required={formElement.config.validation.required}\r\n        invalid={!formElement.config.valid}\r\n        shouldValidate={formElement.config.validation}\r\n        touched={formElement.config.touched}\r\n        changed={(event) => this.inputChangedHandler2(event, formElement.id)}\r\n      />\r\n    ));\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = <p className=\"\">Some thing Went Wrong</p>;\r\n    }\r\n    return (\r\n      <div className={classes.House}>\r\n        <h2 className={classes.PrimaryHeading}>Welcome To house Listing</h2>\r\n        <form onSubmit={this.houseAddHandler} className={classes.Form}>\r\n          <div className={classes.HouseForm}>\r\n            <div className={classes.FormSegment}> {form}</div>\r\n            <div className={classes.FormSegment}>\r\n              {form1}\r\n              <div className={classes.LabelField}>\r\n                <div>\r\n                  {\" \"}\r\n                  <label>Parking</label>{\" \"}\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={true}\r\n                    onChange={(event) => this.parkingCheckBoxHander(event)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label>Furnished</label>{\" \"}\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={true}\r\n                    onChange={(event) => this.furnishedCheckBoxHander(event)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label>Gated</label>{\" \"}\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={true}\r\n                    onChange={(event) => this.gatedCheckBoxHander(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div className={classes.FilesInput}>\r\n                  {\" \"}\r\n                  <label\r\n                    htmlFor=\"video\"\r\n                    onClick={() => this.videoInput.click()}\r\n                  >\r\n                    {\" \"}\r\n                    Upload House video(optional)\r\n                  </label>{\" \"}\r\n                  <input\r\n                    type=\"file\"\r\n                    hidden\r\n                    id=\"video\"\r\n                    ref={(videoInput) => (this.videoInput = videoInput)}\r\n                    onChange={this.houseVideoHandler}\r\n                  />\r\n                </div>\r\n                <div className={classes.FilesInput}>\r\n                  {\" \"}\r\n                  <label\r\n                    htmlFor=\"images\"\r\n                    onClick={() => this.imageInput.click()}\r\n                  >\r\n                    {\" \"}\r\n                    Upload House Image\r\n                  </label>\r\n                  <input\r\n                    type=\"file\"\r\n                    id=\"images\"\r\n                    onChange={this.fileSelectorHandler}\r\n                    multiple\r\n                    hidden\r\n                    ref={(imageInput) => (this.imageInput = imageInput)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={classes.HouseButton}>\r\n                {\" \"}\r\n                <Button btnType=\"Success\">\r\n                  {\" \"}\r\n                  SUBMIT {this.props.loading ? <Spinner /> : \"\"}{\" \"}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {errorMessage}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.house.loading,\r\n    error: state.house.error,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddHouse: (houseData) => dispatch(actions.addHouse(houseData)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WithErrorHandler(AddHouse, axios));\r\n"],"sourceRoot":""}